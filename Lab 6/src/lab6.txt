Script started on Fri Oct 30 13:42:31 2020

The default interactive shell is now zsh.
To update your account to use zsh, please run `chsh -s /bin/zsh`.
For more details, please visit https://support.apple.com/kb/HT208050.
[?1034hbash-3.2$ cat Employee.java 
public class Employee extends Person {

    private double salary;
    private int hireDate;

    public Employee() {
        super();
        this.salary = 0;
        this.hireDate = 0;
    }

    public Employee(String name, int age, String gender, double salary, int hireDate) {
        super(name, age, gender);
        this.salary = salary;
        this.hireDate = hireDate;
    }

    public double getSalary() {
        return salary;
    }

    public int getHireDate() {
        return hireDate;
    }

    public void setSalary(double salary) {
        this.salary = salary;
    }

    public void setHireDate(int hireDate) {
        this.hireDate = hireDate;
    }

    @Override
    public String toString() {
        return super.toString() + ", Annual salary = " + this.getSalary() + ", Hire date: " + this.getHireDate();
    }
}bash-3.2$ cat MAn[K[Kanager.java 
public class Manager extends Employee {

    private double bonusSalary;

    public Manager() {
        super();
        this.bonusSalary = 0;
    }

    public Manager(String name, int age, String gender, double salary, int hireDate, double bonusSalary) {
        super(name, age, gender, salary, hireDate);
        this.bonusSalary = bonusSalary;
    }

    public double getBonusSalary() {
        return bonusSalary;
    }

    public void setBonusSalary(double bonusSalary) {
        this.bonusSalary = bonusSalary;
    }

    @Override
    public double getSalary() {
        return super.getSalary() + bonusSalary;
    }

    @Override
    public String toString() {
        return super.toString() + ", Weekly bonus = " + getBonusSalary();
    }

}bash-3.2$ cat Pee[Krson.java 
public class Person {

    private String name;
    private int age;
    private String gender;

    public Person() {
        this.name = "";
        this.age = 0;
        this.gender = "";
    }

    public Person(String name, int age, String gender) {
        this.name = name;
        this.age = age;
        this.gender = gender;
    }

    public String getName() {
        return name;
    }

    public int getAge() {
        return age;
    }

    public String getGender() {
        return gender;
    }

    public void setName(String name) {
        this.name = name;
    }

    public void setAge(int age) {
        this.age = age;
    }

    public void setGender(String gender) {
        this.gender = gender;
    }

    @Override
    public String toString() {
        return "Name: " + name + ", Type: " + getClass() + ", Age: " + age + ", Gender: " + gender;
    }

}bash-3.2$ cat stu[K[K[KS
Shape.java        ShapeTester.java  Square.java       Student.java
bash-3.2$ cat Student.java 
public class Student extends Person {

    private String programName;
    private int programYear;
    private Level level;

    public Student() {
        super();
        this.programName = "";
        this.programYear = 0;
        this.level = Level.undergraduate;
    }

    public Student(String name, int age, String gender, String programName, int programYear, Level level) {
        super(name, age, gender);
        this.programName = programName;
        this.programYear = programYear;
        this.level = level;
    }

    public String getProgramName() {
        return programName;
    }

    public int getProgramYear() {
        return programYear;
    }

    public Level getLevel() {
        return level;
    }

    public void setProgramName(String programName) {
        this.programName = programName;
    }

    public void setProgramYear(int programYear) {
        this.programYear = programYear;
    }

    public void setLevel(Level level) {
        this.level = level;
    }

    @Override
    public String toString() {
        return super.toString() + ", Program: " + this.getProgramName() + ", Level: " + this.getLevel() + ", Year: " + this.getProgramYear();
    }

    enum Level {
        undergraduate,
        graduate
    }

}bash-3.2$ cat Tester.java 
public class Tester {

    public static void main (String[] args) {

        Manager m1 = new Manager("Edxio", 19, "Male", 56342.76, 2013, 320.22);
        System.out.println(m1);

        Person p1 = new Person("John", 45, "Male");
        System.out.println(p1);

        Student s1 = new Student("Emily", 19, "Female", "Mathematics", 2023, Student.Level.undergraduate);
        System.out.println(s1);

        Employee e1 = new Employee("Sally", 23, "Female", 78231.23, 1999);
        System.out.println(e1);

    }

}bash-3.2$ ca[K[Kjavac Tester.java 
bash-3.2$ java Tester.[K
Name: Edxio, Type: class Manager, Age: 19, Gender: Male, Annual salary = 56662.98, Hire date: 2013, Weekly bonus = 320.22
Name: John, Type: class Person, Age: 45, Gender: Male
Name: Emily, Type: class Student, Age: 19, Gender: Female, Program: Mathematics, Level: undergraduate, Year: 2023
Name: Sally, Type: class Employee, Age: 23, Gender: Female, Annual salary = 78231.23, Hire date: 1999
bash-3.2$ cat Cic[Krcle.java 
public class Circle extends Shape {

    private double radius;

    public Circle(double radius) {
        this.setName("Circle");
        this.radius = radius;
    }

    public double getRadius() {
        return radius;
    }

    @Override
    public double area() {
        return Math.PI * this.radius * this.radius;
    }

}bash-3.2$ cat Oval.java 
public class Oval extends Shape {

    private double horRadius;
    private double verRadius;

    public Oval(double horRadius, double verRadius) {
        this.setName("Oval");
        this.horRadius = horRadius;
        this.verRadius = verRadius;
    }

    public double getHorRadius() {
        return horRadius;
    }

    public double getVerRadius() {
        return verRadius;
    }

    @Override
    public double area() {
        return Math.PI * (verRadius * horRadius);
    }

}bash-3.2$ cat Triangle.java 
public class Triangle extends Shape {

    private double base;
    private double height;

    public Triangle(double base, double height) {
        this.setName("Triangle");
        this.base = base;
        this.height = height;
    }

    public double getBase() {
        return base;
    }

    public double getHeight() {
        return height;
    }

    @Override
    public double area() {
        return (this.base * this.height) / 2;
    }

}bash-3.2$ cat Square.java 
public class Square extends Shape {

    private double side;

    public Square(double side) {
        this.setName("Square");
        this.side = side;
    }

    public double getSide() {
        return side;
    }

    @Override
    public double area() {
        return this.side * this.side;
    }

}bash-3.2$ cat Shape.java
public abstract class Shape implements Comparable<Shape>{

    private String name;

    public Shape() {
        this.name = "General Shape";
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public abstract double area();

    @Override
    public int compareTo(Shape o) {

        if (this.area() < o.area())
            return -1;

        if (this.area() > o.area())
            return 1;

        return 0;

    }

}bash-3.2$ cat ShapeTester.java 
import java.util.ArrayList;
import java.util.Random;
import java.util.Scanner;

public class ShapeTester {

    public static void main (String[] args) {

        ArrayList<Shape> shapes = new ArrayList<Shape>();

        Scanner in = new Scanner(System.in);
        Random rand = new Random();

        while (true) {

            System.out.print("Enter one character (T, C, Q, O, or E): ");
            char option = in.next().charAt(0);

            switch (option) {

                case 'T': { //Triangle
                    double base = rand.nextInt(20) + 1;
                    double height = rand.nextInt(20) + 1;

                    Triangle triangle = new Triangle(base, height);
                    shapes.add(triangle);

                    continue;
                }

                case 'C': { //Circle
                    double radius = rand.nextInt(20) + 1;

                    Circle circle = new Circle(radius);
                    shapes.add(circle);

                    continue;
                }

                case 'Q': { //Square
                    double side = rand.nextInt(20) + 1;

                    Square square = new Square(side);
                    shapes.add(square);

                    continue;
                }

                case 'O': {
                    double horRadius = rand.nextInt(20) + 1;
                    double verRadius = rand.nextInt(20) + 1;

                    Oval oval = new Oval(horRadius, verRadius);
                    shapes.add(oval);

                    continue;
                }

                case 'E': { //Exit loop
                    break;
                }

            }

            break;

        }

        for (Shape shape : shapes) {
            System.out.printf("Shape: %s\t Area: %.2f\n", shape.getName(), shape.area());
        }

    }

}bash-3.2$ javac ShapeTester.java 
bash-3.2$ java ShapeTester.[K
Enter one character (T, C, Q, O, or E): C
Enter one character (T, C, Q, O, or E): Q
Enter one character (T, C, Q, O, or E): O
Enter one character (T, C, Q, O, or E): O
Enter one character (T, C, Q, O, or E): T
Enter one character (T, C, Q, O, or E): E
Shape: Circle	 Area: 3.14
Shape: Square	 Area: 225.00
Shape: Oval	 Area: 471.24
Shape: Oval	 Area: 34.56
Shape: Triangle	 Area: 65.00
bash-3.2$ exit
exit

Script done on Fri Oct 30 13:44:58 2020
